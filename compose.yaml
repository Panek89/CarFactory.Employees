services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: carfactory-employees-mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/${DB_PORT}' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - carfactory-employees-network

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_PORT_MANAGEMENT}:${RABBITMQ_PORT_MANAGEMENT}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - carfactory-employees-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT}
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: ["CMD-SHELL", "timeout 2 bash -c '</dev/tcp/localhost/${KEYCLOAK_PORT}'"]
      interval: 15s
      timeout: 5s
      retries: 15
      start_period: 60s
    command: ["start-dev", "--http-port", "${KEYCLOAK_PORT}"]
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
    networks:
      - carfactory-employees-network

  keycloak-init:
    image: curlimages/curl:latest
    depends_on:
      keycloak:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./keycloak-init.sh:/init.sh:ro
    command: ["/bin/sh", "/init.sh"]
    networks:
      - carfactory-employees-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carfactory-employees-api
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${API_PORT}
      - ConnectionStrings__SQLSERVER=Server=mssql,${DB_PORT};Database=${DB_NAME};User Id=sa;Password=${DB_PASSWORD};Trust Server Certificate=true;
      - AppSettingsConfiguration__RabbitMq__HostName=${RABBITMQ_SERVICE_NAME}
      - AppSettingsConfiguration__RabbitMq__Username=${RABBITMQ_USER}
      - AppSettingsConfiguration__RabbitMq__Password=${RABBITMQ_PASSWORD}
      - AppSettingsConfiguration__Contracts__FactoriesQueue=${FACTORY_QUEUE}
      - Keycloak__Host=${KEYCLOAK_HOST}
      - Keycloak__Port=${KEYCLOAK_PORT}
      - Keycloak__Realm=${KEYCLOAK_REALM}
      - Keycloak__Audience=${KEYCLOAK_AUDIENCE}
      - Keycloak__ClientId=${KEYCLOAK_CLIENT_ID}
      - Keycloak__ClientSecret=${KEYCLOAK_CLIENT_SECRET}
      - Keycloak__GrantType=${KEYCLOAK_GRANT_TYPE}
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      mssql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      keycloak-init:
        condition: service_completed_successfully
    networks:
      - carfactory-employees-network

networks:
  carfactory-employees-network:
    driver: bridge

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."  

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local
